#pragma version 8
intcblock 0 1 1000 4
bytecblock 0x61737365745f6964 0x766f74655f636f756e74 0x766f74655f616d6f756e74 0x766f74655f63686f696365 0x7265675f626567696e 0x7265675f656e64 0x766f74655f626567696e 0x766f74655f656e64 0x69735f72656769737465726564 0x796573 0x151f7c75 0x
txn NumAppArgs
intc_0 // 0
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0x52e21568 // "create_asset(string,uint64)void"
==
bnz main_l15
txna ApplicationArgs 0
pushbytes 0xc2ac3ba4 // "optin_asset(axfer,asset)void"
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0x07903d34 // "transfer_asset(account,uint64,asset)void"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0xfd2d94b7 // "get_asset_bal(account,asset)uint64"
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0x5ba22a84 // "get_asset_id()uint64"
==
bnz main_l11
txna ApplicationArgs 0
pushbytes 0x65a52fa8 // "setup(uint64,uint64,uint64,uint64)void"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0xa0a9d8db // "cast_vote(string,asset)void"
==
bnz main_l9
err
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 15
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 16
load 15
load 16
callsub castvote_13
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 11
txna ApplicationArgs 2
btoi
store 12
txna ApplicationArgs 3
btoi
store 13
txna ApplicationArgs 4
btoi
store 14
load 11
load 12
load 13
load 14
callsub setup_12
intc_1 // 1
return
main_l11:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getassetid_11
store 10
bytec 10 // 0x151f7c75
load 10
itob
concat
log
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 7
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 8
load 7
load 8
callsub getassetbal_10
store 9
bytec 10 // 0x151f7c75
load 9
itob
concat
log
intc_1 // 1
return
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 4
txna ApplicationArgs 2
btoi
store 5
txna ApplicationArgs 3
intc_0 // 0
getbyte
store 6
load 4
load 5
load 6
callsub transferasset_9
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 3
txn GroupIndex
intc_1 // 1
-
store 2
load 2
gtxns TypeEnum
intc_3 // axfer
==
assert
load 2
load 3
callsub optinasset_8
intc_1 // 1
return
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 0
txna ApplicationArgs 2
btoi
store 1
load 0
load 1
callsub createasset_7
intc_1 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l22
txn OnCompletion
intc_1 // OptIn
==
bnz main_l21
txn OnCompletion
pushint 2 // CloseOut
==
bnz main_l20
err
main_l20:
txn ApplicationID
intc_0 // 0
!=
assert
callsub clearvote_6
intc_1 // 1
return
main_l21:
txn ApplicationID
intc_0 // 0
!=
assert
callsub register_3
intc_1 // 1
return
main_l22:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_2
intc_1 // 1
return

// auth_only
authonly_0:
proto 1 1
frame_dig -1
global CreatorAddress
==
retsub

// auth_only
authonly_1:
proto 1 1
frame_dig -1
global CreatorAddress
==
retsub

// create
create_2:
proto 0 0
bytec_0 // "asset_id"
intc_0 // 0
app_global_put
bytec_1 // "vote_count"
intc_0 // 0
app_global_put
bytec 4 // "reg_begin"
intc_0 // 0
app_global_put
bytec 5 // "reg_end"
intc_0 // 0
app_global_put
bytec 6 // "vote_begin"
intc_0 // 0
app_global_put
bytec 7 // "vote_end"
intc_0 // 0
app_global_put
retsub

// register
register_3:
proto 0 0
global LatestTimestamp
bytec 4 // "reg_begin"
app_global_get
>=
assert
global LatestTimestamp
bytec 5 // "reg_end"
app_global_get
<=
assert
txn Sender
bytec 8 // "is_registered"
intc_0 // 0
app_local_put
txn Sender
bytec_2 // "vote_amount"
intc_0 // 0
app_local_put
txn Sender
bytec_3 // "vote_choice"
bytec 11 // ""
app_local_put
txn Sender
bytec 8 // "is_registered"
intc_1 // 1
app_local_put
retsub

// auth_only
authonly_4:
proto 1 1
frame_dig -1
global CreatorAddress
==
retsub

// auth_opted_in
authoptedin_5:
proto 1 1
frame_dig -1
global CurrentApplicationID
app_opted_in
retsub

// clear_vote
clearvote_6:
proto 0 0
txn Sender
bytec_3 // "vote_choice"
app_local_get
bytec 9 // "yes"
==
bz clearvote_6_l2
bytec_1 // "vote_count"
bytec_1 // "vote_count"
app_global_get
txn Sender
bytec_2 // "vote_amount"
app_local_get
-
app_global_put
txn Sender
bytec_2 // "vote_amount"
intc_0 // 0
app_local_put
clearvote_6_l2:
txn Sender
bytec_3 // "vote_choice"
bytec 11 // ""
app_local_put
retsub

// create_asset
createasset_7:
proto 2 0
txn Sender
callsub authonly_0
// unauthorized
assert
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig -2
extract 2 0
itxn_field ConfigAssetName
frame_dig -1
itxn_field ConfigAssetTotal
global CurrentApplicationAddress
itxn_field ConfigAssetManager
intc_2 // 1000
itxn_field Fee
itxn_submit
bytec_0 // "asset_id"
itxn CreatedAssetID
app_global_put
retsub

// optin_asset
optinasset_8:
proto 2 0
frame_dig -2
gtxns Sender
txn Sender
==
assert
frame_dig -2
gtxns AssetAmount
intc_0 // 0
==
assert
frame_dig -2
gtxns AssetReceiver
txn Sender
==
assert
frame_dig -2
gtxns XferAsset
bytec_0 // "asset_id"
app_global_get
==
assert
retsub

// transfer_asset
transferasset_9:
proto 3 0
txn Sender
callsub authonly_1
// unauthorized
assert
global CurrentApplicationAddress
bytec_0 // "asset_id"
app_global_get
asset_holding_get AssetBalance
store 18
store 17
frame_dig -2
intc_0 // 0
>
frame_dig -2
load 17
<=
&&
// Ensure amount is valid
assert
itxn_begin
intc_3 // axfer
itxn_field TypeEnum
bytec_0 // "asset_id"
app_global_get
itxn_field XferAsset
frame_dig -2
itxn_field AssetAmount
frame_dig -3
txnas Accounts
itxn_field AssetReceiver
intc_2 // 1000
itxn_field Fee
itxn_submit
retsub

// get_asset_bal
getassetbal_10:
proto 2 1
intc_0 // 0
frame_dig -2
txnas Accounts
bytec_0 // "asset_id"
app_global_get
asset_holding_get AssetBalance
store 19
frame_bury 0
retsub

// get_asset_id
getassetid_11:
proto 0 1
intc_0 // 0
bytec_0 // "asset_id"
app_global_get
frame_bury 0
retsub

// setup
setup_12:
proto 4 0
txn Sender
callsub authonly_4
// unauthorized
assert
bytec 4 // "reg_begin"
global LatestTimestamp
frame_dig -4
+
app_global_put
bytec 5 // "reg_end"
global LatestTimestamp
frame_dig -3
+
app_global_put
bytec 6 // "vote_begin"
global LatestTimestamp
frame_dig -2
+
app_global_put
bytec 7 // "vote_end"
global LatestTimestamp
frame_dig -1
+
app_global_put
retsub

// cast_vote
castvote_13:
proto 2 0
intc_0 // 0
txn Sender
callsub authoptedin_5
// unauthorized
assert
txn Sender
bytec_0 // "asset_id"
app_global_get
asset_holding_get AssetBalance
store 21
store 20
txn Sender
bytec 8 // "is_registered"
app_local_get
intc_1 // 1
==
assert
global LatestTimestamp
bytec 6 // "vote_begin"
app_global_get
>=
global LatestTimestamp
bytec 7 // "vote_end"
app_global_get
<=
&&
assert
load 21
load 20
intc_2 // 1000
>=
&&
assert
load 20
frame_bury 0
frame_dig -2
extract 2 0
bytec 9 // "yes"
==
frame_dig -2
extract 2 0
pushbytes 0x6e6f // "no"
==
||
frame_dig -2
extract 2 0
pushbytes 0x6162737461696e // "abstain"
==
||
assert
txn Sender
bytec_3 // "vote_choice"
frame_dig -2
extract 2 0
app_local_put
frame_dig -2
extract 2 0
bytec 9 // "yes"
==
bz castvote_13_l2
txn Sender
bytec_2 // "vote_amount"
frame_dig 0
app_local_put
bytec_1 // "vote_count"
bytec_1 // "vote_count"
app_global_get
txn Sender
bytec_2 // "vote_amount"
app_local_get
+
app_global_put
castvote_13_l2:
retsub